=head1 NAME

Gungho::Manual::Basics - Gunghoの基本

=head1 Gunghoの由来

GunghoをそもそもPOEで作られたクローラー「Xango」を拡張する際に「こうあればi
拡張しやすいのに」という願望を満たすために作られました。それまでに培われた
クロールのノウハウや、フレームワークとしてどの部分は不変でどの部分が
アプリケーションに応じて変化していかなければならないのかの知識を生かした
形で実現可能なクローラーフレームワークはなにか、という形がGunghoです。

=head1 Gunghoの構成

GunghoはWebクローラーには大きく分けて３つのコンポーネントに分けられる物と
しています。

=over 4

=item Provider

Providerはクローラーに「次になにを取りに行くのか」指定するコンポーネントです。
Providerがリクエストを出し続ける限り、クローラーはそのURLを取得しつづけます

=item Handler

Handlerは取得されたURLを処理するコンポーネントです。HTMLのパース等はこの
コンポーネントから行います。

=item Engine

EngineはPOE等、イベントベースの非同期エンジンを介してHTTP通信を行います。
現在POEエンジンのみが本番環境に対応できるレベルまで開発が進んでいます。

=back

これらのコンポーネントをコントロールするためにメディエーターが存在します。
例えば ProviderからEngineに取得するURLを渡すためにはProviderオブジェクトに
直接指示をするのではなく、ほぼ全てのメソッドにで一つ目に渡される$cから
指定します：

   $c->send_request( Gungho::Request->new(GET => $url) );

このようにGunghoの中のコンポーネント同士は必ずこのメディエーターを通して
連絡を取り合います。

=head1 Gunghoの拡張

Gunghoの拡張はPluginとComponentを追加する事によって実現します。

現在PluginとComponentは混在していますが

=over 4

=item Component

ComponentはGunghoの実行内容そのものを変更するものです。

=item Plugin

Pluginは

=cut


