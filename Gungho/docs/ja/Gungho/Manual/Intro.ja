=head1 NAME

Gungho - 高性能クローラーフレームワーク

=head1 SYNOPSIS

=head1 DESCRIPTION

=head2 Gunghoとは

一般的にWebクローラーは(1)ページを取得する (2)解析する を永続的に行う
ものですが、この一連の動作の中にrobots.txtの処理やスロットリング等、
複数のクローラーを開発しているとその度に繰り返し実装し直す必要のある部品が
多々あります。

Gunghoはそれらの機能をなるたけフレームワーク側で吸収し、開発者はクローラー
毎の特徴だけを開発する事に専念できるよう開発されたWebクローラーフレームワーク
です。

0.09xxxバージョンでは基本機能はほぼかたまり、1.00000に向けてインターフェースや
細かいユーザビリティの面での改善を見据えて開発が進んでいます。

=head2 Gunghoの構成

GunghoはWebクローラーには大きく分けて３つのコンポーネントに分けられる物と
しています。

=over 4

=item Provider

Providerはクローラーに「次になにを取りに行くのか」指定するコンポーネントです。
Providerがリクエストを出し続ける限り、クローラーはそのURLを取得しつづけます

=item Handler

Handlerは取得されたURLを処理するコンポーネントです。HTMLのパース等はこの
コンポーネントから行います。

=item Engine

EngineはPOE等、イベントベースの非同期エンジンを介してHTTP通信を行います。
現在POEエンジンのみが本番環境に対応できるレベルまで開発が進んでいます。

=back

これらのコンポーネントをコントロールするためにメディエーターが存在します。
例えば ProviderからEngineに取得するURLを渡すためにはProviderオブジェクトに
直接指示をするのではなく、ほぼ全てのメソッドにで一つ目に渡される$cから
指定します：

   $c->send_request( Gungho::Request->new(GET => $url) );

=cut